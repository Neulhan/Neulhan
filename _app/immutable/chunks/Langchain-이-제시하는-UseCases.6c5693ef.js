import{s as K,n as b}from"./scheduler.7c4769d9.js";import{S as N,i as V,g as i,s as u,h as a,x as s,c as L,a as l,f as n}from"./index.cc557082.js";function W(J){let C,B="Langchain 공식문서에서 제시하는 유스케이스 다수.",A,h,R="1. 데이터 참조해서 답변하기",T,p,y="<li>Langchain 을 이용하면 RAG 어플리케이션을 쉽게 구현 가능</li> <li>존재하는 데이터 소스 (SQL, GraphQL, API, 파일데이터, 검색데이터 등등) 를 연결만 해주면, LLM 은 데이터에서 찾아서 응답 가능</li> <li>다만 보통 LLM 에 한 번에 넘겨줄 수 있는 토큰 수 제한이 있는데, Langchain 은 토큰 제한을 극복하는 방법들을 쉽게 제공</li> <li>Phind 처럼 검색 데이터를 처리해서 응답을 줄 수도 있고, 로앤봇처럼 법령 데이터를 연결해서 제공할 수도 있음.</li> <li>제공된 Document 를 기반으로 응답이 되기 때문에 할루시네이션이 줄어든다는 장점.</li>",r,x,z='<img src="https://neulhan-blog.s3.ap-northeast-2.amazonaws.com/images/Langchain-%EC%9D%B4-%EC%A0%9C%EC%8B%9C%ED%95%98%EB%8A%94-UseCases/2023-12-16-01-41-41.png" alt="RAG"/>',g,m,I="2. API 와 상호작용",E,v,S="<li>위의 RAG 와도 연결되는 부분이 있다.</li> <li>사용자의 질문에 답변하기 위해서 API 를 호출할 수 있음.</li> <li>그런데 검색보다 더 기대되는 부분은, 자연어 채팅으로 비행기표 예매와 같은 API 도 호출할 수 있게 된다는 것.</li> <li>Agent 와 Tool 을 미리미리 만들어두면 가능하다.</li>",P,c,w="3. 요약",U,f,Q="<li>Langchain 으로 요약 어플리케이션도 쉽게 구현가능</li> <li>RAG 와 마찬가지로, 기본적으로 Langchain 이 Document 를 가져와서 LLM 과 상호작용 하는 과정의 인터페이스를 잘 만들어놨기 때문. 덕분에 여러 Data Source 를 쉽게 연결해서 붙일 수 있다.</li>",d,_,j="4. 추출",q,o,O="<li>자연어에서 데이터를 추출할 수 있다.</li> <li>Langchain 에서 Output Parsing 관련해서도 인터페이스를 잘 만들어둠.</li> <li>LLM 을 여러겹으로 쓸 경우 Output 을 구조화된 데이터로 만들어서 아래 계층으로 넘겨줘야하는데 이런 처리도 간편.</li>",D,H,k="REF",G,M,F='<li><a href="https://python.langchain.com/docs/use_cases/qa_structured/sql" rel="nofollow">https://python.langchain.com/docs/use_cases/qa_structured/sql</a></li>';return{c(){C=i("p"),C.textContent=B,A=u(),h=i("h3"),h.textContent=R,T=u(),p=i("ul"),p.innerHTML=y,r=u(),x=i("p"),x.innerHTML=z,g=u(),m=i("h3"),m.textContent=I,E=u(),v=i("ul"),v.innerHTML=S,P=u(),c=i("h3"),c.textContent=w,U=u(),f=i("ul"),f.innerHTML=Q,d=u(),_=i("h3"),_.textContent=j,q=u(),o=i("ul"),o.innerHTML=O,D=u(),H=i("h2"),H.textContent=k,G=u(),M=i("ul"),M.innerHTML=F},l(t){C=a(t,"P",{"data-svelte-h":!0}),s(C)!=="svelte-1gc80u5"&&(C.textContent=B),A=L(t),h=a(t,"H3",{"data-svelte-h":!0}),s(h)!=="svelte-duz6m6"&&(h.textContent=R),T=L(t),p=a(t,"UL",{"data-svelte-h":!0}),s(p)!=="svelte-19ngxoy"&&(p.innerHTML=y),r=L(t),x=a(t,"P",{"data-svelte-h":!0}),s(x)!=="svelte-1yft2qf"&&(x.innerHTML=z),g=L(t),m=a(t,"H3",{"data-svelte-h":!0}),s(m)!=="svelte-1h1c95r"&&(m.textContent=I),E=L(t),v=a(t,"UL",{"data-svelte-h":!0}),s(v)!=="svelte-1nxg0ij"&&(v.innerHTML=S),P=L(t),c=a(t,"H3",{"data-svelte-h":!0}),s(c)!=="svelte-vdbqn6"&&(c.textContent=w),U=L(t),f=a(t,"UL",{"data-svelte-h":!0}),s(f)!=="svelte-1p3fpmc"&&(f.innerHTML=Q),d=L(t),_=a(t,"H3",{"data-svelte-h":!0}),s(_)!=="svelte-p1madk"&&(_.textContent=j),q=L(t),o=a(t,"UL",{"data-svelte-h":!0}),s(o)!=="svelte-1i6zrg"&&(o.innerHTML=O),D=L(t),H=a(t,"H2",{"data-svelte-h":!0}),s(H)!=="svelte-9wfzbx"&&(H.textContent=k),G=L(t),M=a(t,"UL",{"data-svelte-h":!0}),s(M)!=="svelte-jx7pig"&&(M.innerHTML=F)},m(t,e){l(t,C,e),l(t,A,e),l(t,h,e),l(t,T,e),l(t,p,e),l(t,r,e),l(t,x,e),l(t,g,e),l(t,m,e),l(t,E,e),l(t,v,e),l(t,P,e),l(t,c,e),l(t,U,e),l(t,f,e),l(t,d,e),l(t,_,e),l(t,q,e),l(t,o,e),l(t,D,e),l(t,H,e),l(t,G,e),l(t,M,e)},p:b,i:b,o:b,d(t){t&&(n(C),n(A),n(h),n(T),n(p),n(r),n(x),n(g),n(m),n(E),n(v),n(P),n(c),n(U),n(f),n(d),n(_),n(q),n(o),n(D),n(H),n(G),n(M))}}}const Z={title:"Langchain 이 제시하는 UseCases",description:"Langchain 공식문서에서 제시하는 유스케이스 다수. 1. 데이터 참조해서 답변하기 Langchain 을 이용하면 RAG 어플리케이션을 쉽게 구현 가능 존재하는 데이터 소스 (SQL, GraphQL, API, 파일데이터, 검색데이터 등등) 를 연결만 해주면, LLM 은 데이터에서",date:"2023-11-11",categories:["langchain","llm"],published:!0,thumbnail:"https://neulhan-blog.s3.ap-northeast-2.amazonaws.com/images/Langchain-이-제시하는-UseCases/2023-12-16-01-41-41.png"};class $ extends N{constructor(C){super(),V(this,C,null,W,K,{})}}export{$ as default,Z as metadata};
