import{s as Ee,n as zl}from"./scheduler.7c4769d9.js";import{S as qe,i as ze,g as i,s as p,H as We,h as s,x as u,c as a,j as Pe,C as Re,f as e,k as je,a as n}from"./index.cc557082.js";function Ue(ge){let o,Ul="개요",tt,r,Fl=`예전에 fastapi 소개글을 썼었는데, 그 과정에서 ASGI 에 흥미로움을 느껴서 정리해봤다.
WSGI 와 ASGI 의 역사와 흥미로운 사실들을 알아보자.`,lt,v,Ol="WSGI",et,f,Jl="일단 WSGI 는 뭘까.",nt,S,Nl='<li>Web Server 와 Python Application 이 서로 통신하려면?<ul><li>여기서 말하는 Web Server 는 Web Application Server 가 아닌 Nginx, Apache HTTPd 와 같은 Web Server.</li></ul></li> <li>Java 진영에서는 서블렛 API가 Web Server 와 Java Application 을 연결해준다</li> <li>Python 진영에는 한동안 공식 인터페이스가 없어서 mod_python, Medusa, FastCGI 등 일관되지 않은 방식을 사용</li> <li><strong>Web Server 와 Python Application 이 소통하는 일관된 방식</strong>이 필요하다는 인식하에 <a href="https://peps.python.org/pep-0333/" rel="nofollow">PEP-333</a> 에서 Interface 를 정의</li> <li>그것이 WSGI (Web Server Gateway Interface)<ul><li>2003.12.07 - 무려 python2 일 때 정의된 interface</li> <li>이후 python3 가 나와서 수정된 <a href="https://peps.python.org/pep-3333/" rel="nofollow">PEP-3333</a> 이 바로 WSGI 라고 할 수 있다.</li></ul></li> <li>Django, Flask 등의 프레임워크는 WSGI 에 맞춰 인터페이스를 구현해놨다.</li>',it,b,Ql='<img src="https://neulhan-blog.s3.ap-northeast-2.amazonaws.com/images/WSGI-%EC%99%80-ASGI/2023-11-13-00-32-49.png" alt="WSGI"/>',st,pt,at,C,Kl="WSGI 의 구조",ut,I,Vl="아래는 WSGI 에 부합하는 Application 구현 예시이다.",ot,m,rt,Be=`<code class="language-python"><span class="token keyword">def</span> <span class="token function">simple_app</span><span class="token punctuation">(</span>environ<span class="token punctuation">,</span> start_response<span class="token punctuation">)</span><span class="token punctuation">:</span>
    status <span class="token operator">=</span> <span class="token string">'200 OK'</span>
    response_headers <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token string">'Content-type'</span><span class="token punctuation">,</span> <span class="token string">'text/plain'</span><span class="token punctuation">)</span><span class="token punctuation">]</span>
    start_response<span class="token punctuation">(</span>status<span class="token punctuation">,</span> response_headers<span class="token punctuation">)</span>
    <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token string">b"Hello world!&#92;n"</span><span class="token punctuation">]</span></code>`,vt,h,Xl="<li>environ(dict), start_response 라는 2개의 positional argument 을 가진 callable 한 형식으로 어플리케이션을 구현</li> <li><strong>request, response 를 묶어서 하나의 블럭 단위로 동작.</strong></li> <li>Streaming 기능을 구현하려면 OS 에 넘기거나, 스레딩으로 처리. 블럭 전송이 지연되어서는 안 됨.</li>",ft,St,bt,Ct,It,x,Yl="WSGI 에 무슨 문제가 있었을까?",mt,G,Zl="<li>WSGI는 동기적으로 동작하는 Request-Response 구조를 가졌다.</li> <li><strong>websocket 과 같은 long-live connection 스펙이 고려되지 않았다.</strong></li> <li>2003년에 정의된 인터페이스라서, 2011년에 표준화된 WebSocket 을 지원할 수 없었던 것.</li> <li>또한 python3.5 에서 async 지원이 본격화 되면서, 이에 맞는 새 규격이 필요해지기도 했다.</li>",ht,xt,Gt,ct,Ht,c,$l="ASGI 의 등장",wt,H,dl='<li>위와 같은 WSGI 의 <strong>한계를 해결하기 위해 ASGI 가 등장</strong><ul><li>2015년 11월 13일 : python3.5 가 나오면서 async await 추가<ul><li>python 진영이 본격적으로 비동기를 구현하면서 ASGI 의 발판이 마련됨</li></ul></li> <li>2015년 12월 24일 : Django 측 개발자인 <a href="https://github.com/andrewgodwin" rel="nofollow">Andrew Godwin</a> 이 asgiref 의 첫 커밋을 작성</li> <li>2018년 : <a href="https://github.com/django/asgiref" rel="nofollow">asgiref</a> 레포에서 ASGI 버전 1을 릴리즈, ASGI 팀이 공식적으로 등장</li></ul></li> <li>재미있는 사실은 ASGI 를 정의하고 있는 곳이 django 조직에 있는 <a href="https://github.com/django/asgiref" rel="nofollow">asgiref</a> 레포지토리라는 것. (Django 가 근본이야!)</li> <li><strong>Asyncronous Server Gateway Interface</strong><ul><li>AWSGI 가 아닌 ASGI</li> <li>웹서버에 한정짓지 않겠다는 의지</li></ul></li>',_t,w,te='<img src="https://neulhan-blog.s3.ap-northeast-2.amazonaws.com/images/WSGI-%EC%99%80-ASGI/2023-11-13-19-10-59.png" alt="asgiref"/>',kt,At,yt,_,le='<img src="https://neulhan-blog.s3.ap-northeast-2.amazonaws.com/images/WSGI-%EC%99%80-ASGI/2023-11-12-23-53-00.png" alt="asgi"/>',Lt,Mt,Tt,k,ee='<li>ASGI 는 WSGI 의 정신을 계승했다.</li> <li><strong>WSGI 의 슈퍼셋으로 설계되었기 때문에, WSGI 어플리케이션도 ASGI 서버 내부에서 실행 가능</strong>.<ul><li>이 경우 두 인터페이스 사이에 wrapper 가 필요 (asgiref 라이브러리에서 제공)</li> <li>async event loop 에서 WSGI 어플리케이션을 실행할 때는 threadpool 을 사용</li></ul></li> <li>덕분에 WSGI 를 사용하던 여러 프레임워크들도 ASGI로의 전환을 비교적 쉽게 가져갈 수 있었다.<ul><li>Django 는 3.0 부터 ASGI 를 지원하기 시작. (2019.12.02)</li> <li>동기적으로 작성된 수많은 코드를 async 로 변경할 수 없었기에 일단 <a href="https://github.com/django/asgiref" rel="nofollow">asgiref</a> 에서 제공하는 <code>sync_to_async</code> 함수를 이용</li> <li>Django 4.1 부터는 <code>MyModel.objects.asave()</code> <code>MyModel.objecst.aget()</code> 과 같이 ORM 에서 직접 async 지원이 추가 (2022.08.03)</li></ul></li>',Wt,Pt,Rt,jt,gt,A,ne="ASGI 의 동작 방식",Bt,y,ie=`연결에 대한 세부정보(scope),<br/>
클라이언트에서 메세지를 받아오는 부분(receive)과<br/>
클라이언트에 메세지를 보내는 부분(send) 으로 구성되어있다.`,Dt,L,se='<img src="https://neulhan-blog.s3.ap-northeast-2.amazonaws.com/images/WSGI-%EC%99%80-ASGI/2023-11-12-23-55-59.png" alt="asgi work"/>',Et,qt,zt,M,pe="덕분에 어플리케이션에 여러개의 이벤트들이 동시에 왔다갔다 할 수 있어졌고, 심지어 redis 큐와 같은 외부 트리거에서 이벤트 수신 대기도 가능.",Ut,Ft,Ot,Jt,Nt,T,ae="ASGI Server",Qt,W,ue=`ASGI 는 인터페이스. 실제로 동작할려면 구현된 서버가 필요.<br/>
대표적으로 Uvicorn, Daphne, Hypercorn 이 있다.`,Kt,P,oe="1. Uvicorn",Vt,R,re='<img src="https://neulhan-blog.s3.ap-northeast-2.amazonaws.com/images/WSGI-%EC%99%80-ASGI/2023-11-13-00-00-32.png" alt="uvicorn"/>',Xt,Yt,Zt,j,ve='<li>uvicorn 은 ASGI 기반의 웹 서버 구현체.</li> <li>현재 http1.1 과 websocket 을 지원한다.</li> <li>약간 의아한건 uvicorn 이 아직 HTTP/2 를 지원하지 않는다는 것.</li> <li>HTTP/2 지원은 같은 ASGI 생태계의 daphne 와 hypercorn 에게 양보하고, uvicorn 은 <strong>견고함, 안정적임</strong>을 지향하고 있다는 듯.</li> <li><a href="https://github.com/tomchristie" rel="nofollow">Tom Christie</a> 가 encode Organization 에서 개발<ul><li>이 아저씨는 encode 에서 drf, uvicorn, starlette, apistar(FastAPI 의 전신) 개발을 주도.</li></ul></li>',$t,g,fe="uvloop",dt,B,Se=`uvicorn 은 내부에서 uvloop 라는 것을 사용하는데, 이는 <strong>python 의 asyncio 를 대체</strong>함.<br/>
nodejs 에서 사용하는 다중 플랫폼 비동기 I/O 라이브러리(<strong>libuv</strong>) 위에 <strong>cython</strong> 으로 구현됨.`,tl,D,ll,De=`<code class="language-python"><span class="token keyword">import</span> uvloop

<span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token comment"># Main entry-point.</span>
    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>

uvloop<span class="token punctuation">.</span>run<span class="token punctuation">(</span>main<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span></code>`,el,nl,il,E,be=`벤치마크로 보면 다른 Python 비동기 프레임 워크보다 2~4배 이상 빠르다.<br/>
벤치마크 성능상으로만 본다면, uvloop 의 성능은 Node 보다 빠르고, <strong>Go 프로그램의 성능에 가까울 정도</strong>.`,sl,q,Ce='<img src="https://neulhan-blog.s3.ap-northeast-2.amazonaws.com/images/WSGI-%EC%99%80-ASGI/2023-11-13-16-17-54.png" alt="uvloop benchmark"/>',pl,al,ul,ol,rl,z,Ie="2. Daphne",vl,U,me='<img src="https://neulhan-blog.s3.ap-northeast-2.amazonaws.com/images/WSGI-%EC%99%80-ASGI/2023-11-13-16-12-03.png" alt="daphne"/>',fl,F,he='<li>Django 진영의 ASGI 서버</li> <li>Django Channels 를 지원하기 위해서 구현됨.<ul><li>Django 진영 소속. Django 코어 개발자인 <a href="https://github.com/andrewgodwin" rel="nofollow">Andrew Godwin</a> 이 대부분 구현.</li> <li>channels 도 이 아저씨가 만듬.</li></ul></li> <li>Http/2 를 지원</li>',Sl,bl,Cl,Il,ml,O,xe="3. Hypercorn",hl,J,Ge='<img src="https://neulhan-blog.s3.ap-northeast-2.amazonaws.com/images/WSGI-%EC%99%80-ASGI/2023-11-13-16-12-43.png" alt="hypercorn"/>',xl,N,ce="<li>Flask 진영의 ASGI 서버</li> <li>무려 Http/1.1, Http/2, <strong>Http/3</strong>를 지원</li> <li>python 비동기 웹 프레임워크인 Quart 의 일부였다가, fork 된 후 자체적으로 개발중.</li> <li>이 corn 은 유니콘이 아니라 무려 옥수수의 corn</li>",Gl,cl,Hl,wl,_l,Q,He="ASGI 기반의 프레임워크",kl,K,we=`ASGI 서버 위에 올려서 개발자들의 생산성을 올려주는 프레임워크들.<br/>
보통 홀로서기하기보다 ASGI 서버 위에 올려서 많이 사용한다.`,Al,V,_e=`ASGI 라는 표준을 맞췄기 때문에, uvicorn, daphne, hypercorn 무엇을 쓰던 잘 돌아가긴 한다.<br/>
다만 진영에 따라서 자기 진영의 ASGI 서버를 권장하기는 한다.`,yl,X,ke='<li><strong>FastAPI</strong><ul><li>Starlette 위에 Pydantic 을 버무린 프레임워크</li> <li>생산성의 측면에서 각광받아서 현재는 제일 주류 Python 웹 프레임워크가 아닌가 싶다.</li> <li>Starlette 의 영향을 받아서 uvicorn 과 친하다.</li></ul></li> <li><strong>Django Channels</strong><ul><li>Django 에서 WebSocket 을 지원한다.</li> <li>주로 Daphne 와 같이 쓴다.</li> <li>ASGI 를 고안한 <a href="https://github.com/andrewgodwin" rel="nofollow">Andrew Godwin</a> 이 직접 만들어서 근본이 넘친다</li></ul></li> <li><strong>Quart</strong><ul><li>Flask 진영의 비동기 프레임워크</li> <li>같은 패밀리인 Hypercorn 과 같이 쓰길 권장하는 듯 하다.</li></ul></li> <li><strong>Starlette</strong><ul><li>FastAPI 의 근본이 되는 프레임워크.</li> <li>DRF, uvicorn 을 만든 <a href="https://github.com/tomchristie" rel="nofollow">Tom Christie</a> 가 만들어서 근본력이 남다르다.</li></ul></li> <li><strong>Sanic</strong><ul><li>ASGI 서버를 내장하고 있는 프레임워크</li> <li>nginx 같은 웹서버에 바로 꽂을 수 있다는 점이 매력적</li> <li>ASGI 인터페이스를 준수하기 때문에 다른 ASGI 서버랑 같이 쓸 수도 있다</li></ul></li> <li><strong>Falcon</strong><ul><li>마이크로 서비스를 위한 미니멀리즘 프레임워크.</li> <li>나름의 미니멀한 매력이 있어서 쓰는 곳이 있다는 소문을 들었다.</li></ul></li>',Ll,Ml,Tl,Wl,Pl,Y,Ae="WSGI 에서 ASGI 로 바꿔야 하나요?",Rl,Z,ye="<li>프로젝트를 새로 판다면, 처음부터 ASGI 서버와 함께 비동기로 구현을 하는 것이 좋을듯.</li> <li>대신 잘못 쓰면 문제가 생길수도 있다. <del>(뭐든 안 그렇겠냐만은..)</del><ul><li>예전에 회사에서 FastAPI 를 쓰는데, 간헐적으로 요청이 끊어지는 현상 발생.</li> <li>ASGI 서버를 사용했지만, 함수들은 동기식으로 구현된 상태.</li> <li>레이턴시가 높은 API 일부를 async 로 바꾸었더니 바로 증상이 호전.</li> <li>결국 시간을 들여 모든 API 를 async 로 바꾸었더니 문제가 해결.</li> <li>ASGI 가 좋은 기술인건 맞지만 async 환경에 익숙하지 않다면 서버가 불안정해질수도 있다.</li> <li><del>그 땐 잘 몰랐어서..</del></li></ul></li> <li>WSGI 로 잘 돌아가고 있다면, 성능향상을 목표로 ASGI 로 바꾸는 건 글쎄.<ul><li>이미 WSGI 환경에서 성능 최적화가 잘 되어있을 수 있음. (celery, caching 등)</li> <li>gunicorn 같은 잘 검증된 환경은 국밥같은 든든함과 견고함이 있다.</li></ul></li> <li>WebSocket 기능이 필요하다면?<ul><li>Django 에는 웹소켓 사용 부분은 ASGI, 기존 부분은 WSGI 로 각각 배포하는 방법도 있음.</li> <li>다만 정말 WebSocket 기능이 필요한지는 스펙 체크를 잘 해볼 것.</li> <li>WebSocket 이라는 스펙이 오버엔지니어링일 수도.</li> <li>작은 채팅 기능이라면 클라이언트에서 서버에 일정 시간마다 요청을 보내서 새 채팅이 있는지 확인하는 식으로도 구현이 가능했다</li></ul></li>",jl,gl,Bl,Dl,El,$,Le="참고자료",ql,d,Me='<li><a href="https://peps.python.org/pep-3333/" rel="nofollow">https://peps.python.org/pep-3333/</a></li> <li><a href="https://github.com/django/asgiref" rel="nofollow">https://github.com/django/asgiref</a></li> <li><a href="https://asgi.readthedocs.io/en/latest/introduction.html" rel="nofollow">https://asgi.readthedocs.io/en/latest/introduction.html</a></li> <li><a href="https://www.uvicorn.org/" rel="nofollow">https://www.uvicorn.org/</a></li> <li><a href="https://github.com/MagicStack/uvloop" rel="nofollow">https://github.com/MagicStack/uvloop</a></li> <li><a href="https://www.fullstackpython.com/wsgi-servers.html" rel="nofollow">https://www.fullstackpython.com/wsgi-servers.html</a></li>';return{c(){o=i("h1"),o.textContent=Ul,tt=p(),r=i("p"),r.textContent=Fl,lt=p(),v=i("h1"),v.textContent=Ol,et=p(),f=i("p"),f.textContent=Jl,nt=p(),S=i("ul"),S.innerHTML=Nl,it=p(),b=i("p"),b.innerHTML=Ql,st=p(),pt=i("br"),at=p(),C=i("h2"),C.textContent=Kl,ut=p(),I=i("p"),I.textContent=Vl,ot=p(),m=i("pre"),rt=new We(!1),vt=p(),h=i("ul"),h.innerHTML=Xl,ft=p(),St=i("br"),bt=p(),Ct=i("br"),It=p(),x=i("h2"),x.textContent=Yl,mt=p(),G=i("ul"),G.innerHTML=Zl,ht=p(),xt=i("br"),Gt=p(),ct=i("br"),Ht=p(),c=i("h1"),c.textContent=$l,wt=p(),H=i("ul"),H.innerHTML=dl,_t=p(),w=i("p"),w.innerHTML=te,kt=p(),At=i("br"),yt=p(),_=i("p"),_.innerHTML=le,Lt=p(),Mt=i("br"),Tt=p(),k=i("ul"),k.innerHTML=ee,Wt=p(),Pt=i("br"),Rt=p(),jt=i("br"),gt=p(),A=i("h2"),A.textContent=ne,Bt=p(),y=i("p"),y.innerHTML=ie,Dt=p(),L=i("p"),L.innerHTML=se,Et=p(),qt=i("br"),zt=p(),M=i("p"),M.textContent=pe,Ut=p(),Ft=i("br"),Ot=p(),Jt=i("br"),Nt=p(),T=i("h2"),T.textContent=ae,Qt=p(),W=i("p"),W.innerHTML=ue,Kt=p(),P=i("h3"),P.textContent=oe,Vt=p(),R=i("p"),R.innerHTML=re,Xt=p(),Yt=i("br"),Zt=p(),j=i("ul"),j.innerHTML=ve,$t=p(),g=i("h4"),g.textContent=fe,dt=p(),B=i("p"),B.innerHTML=Se,tl=p(),D=i("pre"),ll=new We(!1),el=p(),nl=i("br"),il=p(),E=i("p"),E.innerHTML=be,sl=p(),q=i("p"),q.innerHTML=Ce,pl=p(),al=i("br"),ul=p(),ol=i("br"),rl=p(),z=i("h3"),z.textContent=Ie,vl=p(),U=i("p"),U.innerHTML=me,fl=p(),F=i("ul"),F.innerHTML=he,Sl=p(),bl=i("br"),Cl=p(),Il=i("br"),ml=p(),O=i("h3"),O.textContent=xe,hl=p(),J=i("p"),J.innerHTML=Ge,xl=p(),N=i("ul"),N.innerHTML=ce,Gl=p(),cl=i("br"),Hl=p(),wl=i("br"),_l=p(),Q=i("h2"),Q.textContent=He,kl=p(),K=i("p"),K.innerHTML=we,Al=p(),V=i("p"),V.innerHTML=_e,yl=p(),X=i("ul"),X.innerHTML=ke,Ll=p(),Ml=i("br"),Tl=p(),Wl=i("br"),Pl=p(),Y=i("h1"),Y.textContent=Ae,Rl=p(),Z=i("ul"),Z.innerHTML=ye,jl=p(),gl=i("br"),Bl=p(),Dl=i("br"),El=p(),$=i("h1"),$.textContent=Le,ql=p(),d=i("ul"),d.innerHTML=Me,this.h()},l(t){o=s(t,"H1",{"data-svelte-h":!0}),u(o)!=="svelte-bvizw"&&(o.textContent=Ul),tt=a(t),r=s(t,"P",{"data-svelte-h":!0}),u(r)!=="svelte-1h5j855"&&(r.textContent=Fl),lt=a(t),v=s(t,"H1",{"data-svelte-h":!0}),u(v)!=="svelte-gn8kz6"&&(v.textContent=Ol),et=a(t),f=s(t,"P",{"data-svelte-h":!0}),u(f)!=="svelte-1b5nqlo"&&(f.textContent=Jl),nt=a(t),S=s(t,"UL",{"data-svelte-h":!0}),u(S)!=="svelte-1ifsbsh"&&(S.innerHTML=Nl),it=a(t),b=s(t,"P",{"data-svelte-h":!0}),u(b)!=="svelte-10kv8jt"&&(b.innerHTML=Ql),st=a(t),pt=s(t,"BR",{}),at=a(t),C=s(t,"H2",{"data-svelte-h":!0}),u(C)!=="svelte-1srp10g"&&(C.textContent=Kl),ut=a(t),I=s(t,"P",{"data-svelte-h":!0}),u(I)!=="svelte-1scr1ep"&&(I.textContent=Vl),ot=a(t),m=s(t,"PRE",{class:!0});var l=Pe(m);rt=Re(l,!1),l.forEach(e),vt=a(t),h=s(t,"UL",{"data-svelte-h":!0}),u(h)!=="svelte-1axuf8q"&&(h.innerHTML=Xl),ft=a(t),St=s(t,"BR",{}),bt=a(t),Ct=s(t,"BR",{}),It=a(t),x=s(t,"H2",{"data-svelte-h":!0}),u(x)!=="svelte-1l1qlh7"&&(x.textContent=Yl),mt=a(t),G=s(t,"UL",{"data-svelte-h":!0}),u(G)!=="svelte-1ewiq7o"&&(G.innerHTML=Zl),ht=a(t),xt=s(t,"BR",{}),Gt=a(t),ct=s(t,"BR",{}),Ht=a(t),c=s(t,"H1",{"data-svelte-h":!0}),u(c)!=="svelte-1x149zs"&&(c.textContent=$l),wt=a(t),H=s(t,"UL",{"data-svelte-h":!0}),u(H)!=="svelte-178fr3h"&&(H.innerHTML=dl),_t=a(t),w=s(t,"P",{"data-svelte-h":!0}),u(w)!=="svelte-q0xasl"&&(w.innerHTML=te),kt=a(t),At=s(t,"BR",{}),yt=a(t),_=s(t,"P",{"data-svelte-h":!0}),u(_)!=="svelte-1qsg435"&&(_.innerHTML=le),Lt=a(t),Mt=s(t,"BR",{}),Tt=a(t),k=s(t,"UL",{"data-svelte-h":!0}),u(k)!=="svelte-1g484b"&&(k.innerHTML=ee),Wt=a(t),Pt=s(t,"BR",{}),Rt=a(t),jt=s(t,"BR",{}),gt=a(t),A=s(t,"H2",{"data-svelte-h":!0}),u(A)!=="svelte-v5thqi"&&(A.textContent=ne),Bt=a(t),y=s(t,"P",{"data-svelte-h":!0}),u(y)!=="svelte-18pqma3"&&(y.innerHTML=ie),Dt=a(t),L=s(t,"P",{"data-svelte-h":!0}),u(L)!=="svelte-1na3tsk"&&(L.innerHTML=se),Et=a(t),qt=s(t,"BR",{}),zt=a(t),M=s(t,"P",{"data-svelte-h":!0}),u(M)!=="svelte-q7c9ar"&&(M.textContent=pe),Ut=a(t),Ft=s(t,"BR",{}),Ot=a(t),Jt=s(t,"BR",{}),Nt=a(t),T=s(t,"H2",{"data-svelte-h":!0}),u(T)!=="svelte-fc0erv"&&(T.textContent=ae),Qt=a(t),W=s(t,"P",{"data-svelte-h":!0}),u(W)!=="svelte-xoquhd"&&(W.innerHTML=ue),Kt=a(t),P=s(t,"H3",{"data-svelte-h":!0}),u(P)!=="svelte-m2u6f"&&(P.textContent=oe),Vt=a(t),R=s(t,"P",{"data-svelte-h":!0}),u(R)!=="svelte-cuv9o6"&&(R.innerHTML=re),Xt=a(t),Yt=s(t,"BR",{}),Zt=a(t),j=s(t,"UL",{"data-svelte-h":!0}),u(j)!=="svelte-yafgmt"&&(j.innerHTML=ve),$t=a(t),g=s(t,"H4",{"data-svelte-h":!0}),u(g)!=="svelte-13neoe3"&&(g.textContent=fe),dt=a(t),B=s(t,"P",{"data-svelte-h":!0}),u(B)!=="svelte-1fpdqb8"&&(B.innerHTML=Se),tl=a(t),D=s(t,"PRE",{class:!0});var Te=Pe(D);ll=Re(Te,!1),Te.forEach(e),el=a(t),nl=s(t,"BR",{}),il=a(t),E=s(t,"P",{"data-svelte-h":!0}),u(E)!=="svelte-1hh00pe"&&(E.innerHTML=be),sl=a(t),q=s(t,"P",{"data-svelte-h":!0}),u(q)!=="svelte-1cv7iyr"&&(q.innerHTML=Ce),pl=a(t),al=s(t,"BR",{}),ul=a(t),ol=s(t,"BR",{}),rl=a(t),z=s(t,"H3",{"data-svelte-h":!0}),u(z)!=="svelte-1jfmdvo"&&(z.textContent=Ie),vl=a(t),U=s(t,"P",{"data-svelte-h":!0}),u(U)!=="svelte-14it4p6"&&(U.innerHTML=me),fl=a(t),F=s(t,"UL",{"data-svelte-h":!0}),u(F)!=="svelte-cinmsj"&&(F.innerHTML=he),Sl=a(t),bl=s(t,"BR",{}),Cl=a(t),Il=s(t,"BR",{}),ml=a(t),O=s(t,"H3",{"data-svelte-h":!0}),u(O)!=="svelte-k0h9rh"&&(O.textContent=xe),hl=a(t),J=s(t,"P",{"data-svelte-h":!0}),u(J)!=="svelte-184n0t4"&&(J.innerHTML=Ge),xl=a(t),N=s(t,"UL",{"data-svelte-h":!0}),u(N)!=="svelte-1f46w8x"&&(N.innerHTML=ce),Gl=a(t),cl=s(t,"BR",{}),Hl=a(t),wl=s(t,"BR",{}),_l=a(t),Q=s(t,"H2",{"data-svelte-h":!0}),u(Q)!=="svelte-1xytjku"&&(Q.textContent=He),kl=a(t),K=s(t,"P",{"data-svelte-h":!0}),u(K)!=="svelte-9r53wq"&&(K.innerHTML=we),Al=a(t),V=s(t,"P",{"data-svelte-h":!0}),u(V)!=="svelte-157keji"&&(V.innerHTML=_e),yl=a(t),X=s(t,"UL",{"data-svelte-h":!0}),u(X)!=="svelte-exllbm"&&(X.innerHTML=ke),Ll=a(t),Ml=s(t,"BR",{}),Tl=a(t),Wl=s(t,"BR",{}),Pl=a(t),Y=s(t,"H1",{"data-svelte-h":!0}),u(Y)!=="svelte-1v2omnb"&&(Y.textContent=Ae),Rl=a(t),Z=s(t,"UL",{"data-svelte-h":!0}),u(Z)!=="svelte-1hw2dbz"&&(Z.innerHTML=ye),jl=a(t),gl=s(t,"BR",{}),Bl=a(t),Dl=s(t,"BR",{}),El=a(t),$=s(t,"H1",{"data-svelte-h":!0}),u($)!=="svelte-bn9628"&&($.textContent=Le),ql=a(t),d=s(t,"UL",{"data-svelte-h":!0}),u(d)!=="svelte-15s8f7e"&&(d.innerHTML=Me),this.h()},h(){rt.a=null,je(m,"class","language-python"),ll.a=null,je(D,"class","language-python")},m(t,l){n(t,o,l),n(t,tt,l),n(t,r,l),n(t,lt,l),n(t,v,l),n(t,et,l),n(t,f,l),n(t,nt,l),n(t,S,l),n(t,it,l),n(t,b,l),n(t,st,l),n(t,pt,l),n(t,at,l),n(t,C,l),n(t,ut,l),n(t,I,l),n(t,ot,l),n(t,m,l),rt.m(Be,m),n(t,vt,l),n(t,h,l),n(t,ft,l),n(t,St,l),n(t,bt,l),n(t,Ct,l),n(t,It,l),n(t,x,l),n(t,mt,l),n(t,G,l),n(t,ht,l),n(t,xt,l),n(t,Gt,l),n(t,ct,l),n(t,Ht,l),n(t,c,l),n(t,wt,l),n(t,H,l),n(t,_t,l),n(t,w,l),n(t,kt,l),n(t,At,l),n(t,yt,l),n(t,_,l),n(t,Lt,l),n(t,Mt,l),n(t,Tt,l),n(t,k,l),n(t,Wt,l),n(t,Pt,l),n(t,Rt,l),n(t,jt,l),n(t,gt,l),n(t,A,l),n(t,Bt,l),n(t,y,l),n(t,Dt,l),n(t,L,l),n(t,Et,l),n(t,qt,l),n(t,zt,l),n(t,M,l),n(t,Ut,l),n(t,Ft,l),n(t,Ot,l),n(t,Jt,l),n(t,Nt,l),n(t,T,l),n(t,Qt,l),n(t,W,l),n(t,Kt,l),n(t,P,l),n(t,Vt,l),n(t,R,l),n(t,Xt,l),n(t,Yt,l),n(t,Zt,l),n(t,j,l),n(t,$t,l),n(t,g,l),n(t,dt,l),n(t,B,l),n(t,tl,l),n(t,D,l),ll.m(De,D),n(t,el,l),n(t,nl,l),n(t,il,l),n(t,E,l),n(t,sl,l),n(t,q,l),n(t,pl,l),n(t,al,l),n(t,ul,l),n(t,ol,l),n(t,rl,l),n(t,z,l),n(t,vl,l),n(t,U,l),n(t,fl,l),n(t,F,l),n(t,Sl,l),n(t,bl,l),n(t,Cl,l),n(t,Il,l),n(t,ml,l),n(t,O,l),n(t,hl,l),n(t,J,l),n(t,xl,l),n(t,N,l),n(t,Gl,l),n(t,cl,l),n(t,Hl,l),n(t,wl,l),n(t,_l,l),n(t,Q,l),n(t,kl,l),n(t,K,l),n(t,Al,l),n(t,V,l),n(t,yl,l),n(t,X,l),n(t,Ll,l),n(t,Ml,l),n(t,Tl,l),n(t,Wl,l),n(t,Pl,l),n(t,Y,l),n(t,Rl,l),n(t,Z,l),n(t,jl,l),n(t,gl,l),n(t,Bl,l),n(t,Dl,l),n(t,El,l),n(t,$,l),n(t,ql,l),n(t,d,l)},p:zl,i:zl,o:zl,d(t){t&&(e(o),e(tt),e(r),e(lt),e(v),e(et),e(f),e(nt),e(S),e(it),e(b),e(st),e(pt),e(at),e(C),e(ut),e(I),e(ot),e(m),e(vt),e(h),e(ft),e(St),e(bt),e(Ct),e(It),e(x),e(mt),e(G),e(ht),e(xt),e(Gt),e(ct),e(Ht),e(c),e(wt),e(H),e(_t),e(w),e(kt),e(At),e(yt),e(_),e(Lt),e(Mt),e(Tt),e(k),e(Wt),e(Pt),e(Rt),e(jt),e(gt),e(A),e(Bt),e(y),e(Dt),e(L),e(Et),e(qt),e(zt),e(M),e(Ut),e(Ft),e(Ot),e(Jt),e(Nt),e(T),e(Qt),e(W),e(Kt),e(P),e(Vt),e(R),e(Xt),e(Yt),e(Zt),e(j),e($t),e(g),e(dt),e(B),e(tl),e(D),e(el),e(nl),e(il),e(E),e(sl),e(q),e(pl),e(al),e(ul),e(ol),e(rl),e(z),e(vl),e(U),e(fl),e(F),e(Sl),e(bl),e(Cl),e(Il),e(ml),e(O),e(hl),e(J),e(xl),e(N),e(Gl),e(cl),e(Hl),e(wl),e(_l),e(Q),e(kl),e(K),e(Al),e(V),e(yl),e(X),e(Ll),e(Ml),e(Tl),e(Wl),e(Pl),e(Y),e(Rl),e(Z),e(jl),e(gl),e(Bl),e(Dl),e(El),e($),e(ql),e(d))}}}const Je={emoji:"📃",title:"WSGI 와 ASGI",description:"예전에 fastapi 소개글을 썼었는데, 그 과정에서 ASGI 에 흥미로움을 느껴서 정리해봤다. WSGI 와 ASGI 의 역사와 흥미로운 사실들을 알아보자.",date:"2023-11-13",categories:["python","PEP","WSGI & ASGI"],published:!0,thumbnail:"https://neulhan-blog.s3.ap-northeast-2.amazonaws.com/images/WSGI-와-ASGI/2023-11-13-00-00-32.png"};class Ne extends qe{constructor(o){super(),ze(this,o,null,Ue,Ee,{})}}export{Ne as default,Je as metadata};
